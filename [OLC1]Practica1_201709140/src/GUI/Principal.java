/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Analizadores.AnalizadorLexico;
import Objetos.Conjuntos;
import Objetos.ExpresionesRegulares;
import Objetos.Token;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;

/**
 *
 * @author loosc
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    private int contador = 0;
    private String ruta = "";
    private AnalizadorLexico a = new AnalizadorLexico();
    private boolean analizo = false;

    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTAArchivo = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextConsola = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jG = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jScrollPane4 = new javax.swing.JScrollPane();
        image = new javax.swing.JLabel();
        jSelectI = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTAArchivo.setColumns(20);
        jTAArchivo.setRows(5);
        jScrollPane1.setViewportView(jTAArchivo);

        jTextConsola.setColumns(20);
        jTextConsola.setRows(5);
        jScrollPane2.setViewportView(jTextConsola);

        jButton3.setText("Analisis Lexico");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jG.setText("Generar");
        jG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGActionPerformed(evt);
            }
        });

        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jTree1);

        jScrollPane4.setViewportView(image);

        jSelectI.setText("Seleccionar");
        jSelectI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSelectIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(30, 30, 30)
                                .addComponent(jG, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(109, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jScrollPane4)
                                .addContainerGap())
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(195, 195, 195)
                                .addComponent(jSelectI)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jG)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSelectI))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        jMenu1.setText("Archivo");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Limpiar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Acerca");

        jMenuItem3.setText("Acerca de");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenu3.setText("Manual");
        jMenu2.add(jMenu3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JFileChooser jf = new JFileChooser();
        jf.showOpenDialog(this);
        File archivo = jf.getSelectedFile();
        if (archivo != null) {
            ruta = archivo.getAbsolutePath();

            try {
                BufferedReader bf = new BufferedReader(new FileReader(ruta));
                String temp = "";
                String bfRead;
                while ((bfRead = bf.readLine()) != null) {
                    temp = temp + bfRead + "\n";
                }

                this.jTAArchivo.setText(temp);

            } catch (Exception e) {
                System.err.println("No se encontro el archivo");
            }

        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        this.setVisible(false);
        Me v = new Me();
        v.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        jTAArchivo.setText("");

        JOptionPane.showMessageDialog(null, "Operación realizada correctamente");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGActionPerformed
        if (analizo) {
            DefaultMutableTreeNode raiz = new DefaultMutableTreeNode("Automatas");
            DefaultMutableTreeNode tree = new DefaultMutableTreeNode("Arboles");
            DefaultMutableTreeNode sig = new DefaultMutableTreeNode("Tabla de Siguientes");
            DefaultMutableTreeNode trans = new DefaultMutableTreeNode("Tabla de Trasiciones");
            DefaultMutableTreeNode dfa = new DefaultMutableTreeNode("AFD");
            raiz.add(sig);
            raiz.add(tree);
            raiz.add(trans);
            raiz.add(dfa);
            LinkedList<ExpresionesRegulares> exp = new LinkedList<ExpresionesRegulares>();
            exp = a.getEr();

            for (int i = 0; i < exp.size(); i++) {
                DefaultMutableTreeNode arbolER = new DefaultMutableTreeNode("arbol_" + exp.get(i).getNombre());
                DefaultMutableTreeNode sigER = new DefaultMutableTreeNode("siguientes_" + exp.get(i).getNombre());
                DefaultMutableTreeNode transER = new DefaultMutableTreeNode("transicion_" + exp.get(i).getNombre());
                DefaultMutableTreeNode dfaER = new DefaultMutableTreeNode("dfa_" + exp.get(i).getNombre());

                tree.add(arbolER);
                sig.add(sigER);
                trans.add(transER);
                dfa.add(dfaER);
            }

            DefaultTreeModel r = new DefaultTreeModel(raiz);

            jTree1.setModel(r);

            jTree1.revalidate();
            jTree1.validate();
            jTree1.validate();

            jPanel1.revalidate();
            jPanel1.validate();
            jPanel1.repaint();
            this.revalidate();
            this.validate();
            this.repaint();

        } else {
            JOptionPane.showMessageDialog(null, "Realice el analisis para generar imagenes");
        }


    }//GEN-LAST:event_jGActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (jTAArchivo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Cargue archivo para generar reporte del analizador lexico");
        } else {
            try {
                a.lexico(jTAArchivo.getText());
                a.tablaErrores("src\\Reportes\\Errores" + contador + ".pdf");
                a.tablaSimbolos("src\\Reportes\\Tokens" + contador + ".pdf");
                File myFile = new File("src\\Reportes\\Errores" + contador + ".pdf");
                Desktop.getDesktop().open(myFile);
                File myFil = new File("C:\\Users\\loosc\\OneDrive\\Escritorio\\Practica1\\Tokens" + contador + ".pdf");
                Desktop.getDesktop().open(myFil);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            contador++;
            String conj = "";
            LinkedList<Conjuntos> conjuntos = new LinkedList<Conjuntos>();
            conjuntos = a.getConjuntos();
            for (int i = 0; i < conjuntos.size(); i++) {
                conj += "\n" + conjuntos.get(i).getNombre() + ": ";
                for (int j = 0; j < conjuntos.get(i).getConjunt().size(); j++) {
                    conj += conjuntos.get(i).getConjunt().get(j) + ", ";
                }
            }

            LinkedList<ExpresionesRegulares> exp = new LinkedList<ExpresionesRegulares>();
            exp = a.getEr();

            for (int i = 0; i < exp.size(); i++) {

                exp.get(i).getTree().report(exp.get(i).getNombre());
                exp.get(i).reportSiguientes();
                exp.get(i).reportTransicion();
                exp.get(i).getTree().reporteDFA(exp.get(i).getNombre());
                conj += "\n" + exp.get(i).getNombre() + ": ";
                for (int j = 0; j < exp.get(i).getTokens().size(); j++) {
                    conj += exp.get(i).getTokens().get(j).getLexema();
                }
            }
            this.jTextConsola.setText(conj);
            analizo = true;
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged

    }//GEN-LAST:event_jTree1ValueChanged
  
    private void jSelectIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSelectIActionPerformed
        String aux = "";
        TreePath tp = jTree1.getSelectionPath();
        DefaultMutableTreeNode tm = (DefaultMutableTreeNode) tp.getLastPathComponent();

        if (tm.getUserObject().toString().startsWith("arbol_")) {
            
            for (int i = 0; i < a.getEr().size(); i++) {
                aux = "arbol_" + a.getEr().get(i).getNombre();

                if (aux.equals(tm.getUserObject().toString())) {
                    
                    ImageIcon icono = new ImageIcon("src\\" + aux + ".png");
                    icono.getImage().flush();
                    image.setIcon(icono);
                    image.revalidate();
                    image.validate();
                    image.repaint();

                    jScrollPane1.revalidate();
                    jScrollPane1.validate();
                    jScrollPane1.repaint();
                    return;
                }
            }

        } else if (tm.getUserObject().toString().startsWith("siguientes_")) {
            
            for (int i = 0; i < a.getEr().size(); i++) {
                aux = "siguientes_" + a.getEr().get(i).getNombre();

                if (aux.equals(tm.getUserObject().toString())) {
                    
                    ImageIcon icono = new ImageIcon("src\\" + aux + ".png");
                    icono.getImage().flush();
                    image.setIcon(icono);
                    image.revalidate();
                    image.validate();
                    image.repaint();

                    jScrollPane1.revalidate();
                    jScrollPane1.validate();
                    jScrollPane1.repaint();
                    return;
                }
            }
        } else if (tm.getUserObject().toString().startsWith("transicion_")) {
            
            for (int i = 0; i < a.getEr().size(); i++) {
                aux = "transicion_" + a.getEr().get(i).getNombre();
                
                if (aux.equals(tm.getUserObject().toString())) {
                   
                    ImageIcon icono = new ImageIcon("src\\" + aux + ".png");
                    icono.getImage().flush();
                    image.setIcon(icono);
                    image.revalidate();
                    image.validate();
                    image.repaint();

                    jScrollPane1.revalidate();
                    jScrollPane1.validate();
                    jScrollPane1.repaint();
                    return;
                }
            }
        } else if (tm.getUserObject().toString().startsWith("dfa_")) {
            
            for (int i = 0; i < a.getEr().size(); i++) {
                aux = "dfa_" + a.getEr().get(i).getNombre();

                if (aux.equals(tm.getUserObject().toString())) {
                    
                    ImageIcon icono = new ImageIcon("src\\" + aux + ".png");
                    icono.getImage().flush();
                    image.setIcon(icono);
                    image.revalidate();
                    image.validate();
                    image.repaint();

                    jScrollPane1.revalidate();
                    jScrollPane1.validate();
                    jScrollPane1.repaint();
                    return;
                }
            }
        } else if (tm.getUserObject().toString().equals("Tabla de Siguientes")) {
            JOptionPane.showMessageDialog(null, "Seleccione una imagen");
        } else if (tm.getUserObject().toString().equals("Arboles")) {
            JOptionPane.showMessageDialog(null, "Seleccione una imagen");
        } else if (tm.getUserObject().toString().equals("AFD")) {
            JOptionPane.showMessageDialog(null, "Seleccione una imagen");
        } else if (tm.getUserObject().toString().equals("Tabla de Trasiciones")) {
            JOptionPane.showMessageDialog(null, "Seleccione una imagen");
        } else if (tm.getUserObject().toString().equals("Automatas")) {
            JOptionPane.showMessageDialog(null, "Seleccione Siguientes, arboles, dfa o transiciones");

        }
    }//GEN-LAST:event_jSelectIActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel image;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jG;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton jSelectI;
    private javax.swing.JTextArea jTAArchivo;
    private javax.swing.JTextArea jTextConsola;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables

}
